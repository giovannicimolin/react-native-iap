(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[233],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return u},kt:function(){return k}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var d=a.createContext({}),s=function(t){var e=a.useContext(d),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=s(t.components);return a.createElement(d.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),m=s(n),k=r,c=m["".concat(d,".").concat(k)]||m[k]||p[k]||l;return n?a.createElement(c,i(i({ref:e},u),{},{components:n})):a.createElement(c,i({ref:e},u))}));function k(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var d in e)hasOwnProperty.call(e,d)&&(o[d]=e[d]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4417:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return o},metadata:function(){return d},toc:function(){return s},default:function(){return p}});var a=n(2122),r=n(9756),l=(n(7294),n(3905)),i=["components"],o={},d={unversionedId:"api_reference/methods",id:"api_reference/methods",isDocsHomePage:!1,title:"Available Methods",description:"| Method | Result | Description |",source:"@site/docs/api_reference/methods.md",sourceDirName:"api_reference",slug:"/api_reference/methods",permalink:"/react-native-iap/docs/api_reference/methods",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/api_reference/methods.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"AvailablePurchase",permalink:"/react-native-iap/docs/api_reference/available_purchase"},next:{title:"Product",permalink:"/react-native-iap/docs/api_reference/product"}},s=[],u={toc:s};function p(t){var e=t.components,n=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Method"),(0,l.kt)("th",{parentName:"tr",align:null},"Result"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null}))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"initConnection()")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<boolean>")),(0,l.kt)("td",{parentName:"tr",align:null},"Init IAP module. On Android this can be called to preload the connection to Play Services. On iOS, it will simply call ",(0,l.kt)("inlineCode",{parentName:"td"},"canMakePayments")," method and return value which is required for the listeners to work properly."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"purchaseUpdatedListener((purchase: ProductPurchase) => {})")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"EmitterSubscription")),(0,l.kt)("td",{parentName:"tr",align:null},"Register a callback that gets called when the store has any updates to purchases that have not yet been finished, consumed or acknowledged. Returns a React Native ",(0,l.kt)("inlineCode",{parentName:"td"},"EmitterSubscription")," on which you can call ",(0,l.kt)("inlineCode",{parentName:"td"},".remove()")," to stop receiving updates. Register you listener as soon as possible and react to updates at all times."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"purchaseErrorListener((error: PurchaseError) => {})")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"EmitterSubscription")),(0,l.kt)("td",{parentName:"tr",align:null},"Register a callback that gets called when there has been an error with a purchase. Returns a React Native ",(0,l.kt)("inlineCode",{parentName:"td"},"EmitterSubscription")," on which you can call ",(0,l.kt)("inlineCode",{parentName:"td"},".remove()")," to stop receiving updates."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"getProducts(skus: string[])"),(0,l.kt)("ul",null,(0,l.kt)("li",null,"skus: array of Product ID/sku"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<Product[]>")),(0,l.kt)("td",{parentName:"tr",align:null},"Get a list of products (consumable and non-consumable items, but not subscriptions). Note: With before ",(0,l.kt)("inlineCode",{parentName:"td"},"iOS 11.2"),", this method ",(0,l.kt)("em",{parentName:"td"},"will")," also return subscriptions if they are included in your list of SKUs. This is because we cannot differentiate between IAP products and subscriptions prior to ",(0,l.kt)("inlineCode",{parentName:"td"},"iOS 11.2"),"."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"getSubscriptions(skus: string[])"),(0,l.kt)("ul",null,(0,l.kt)("li",null,"skus: array of Subscription ID/sku"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<Subscription[]>")),(0,l.kt)("td",{parentName:"tr",align:null},"Get a list of subscriptions. Note: With before ",(0,l.kt)("inlineCode",{parentName:"td"},"iOS 11.2"),", this method ",(0,l.kt)("em",{parentName:"td"},"will")," also return products if they are included in your list of SKUs. This is because we cannot differentiate between IAP products and subscriptions prior to ",(0,l.kt)("inlineCode",{parentName:"td"},"iOS 11.2"),"."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"getPurchaseHistory()")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<Purchase>")),(0,l.kt)("td",{parentName:"tr",align:null},"Gets an inventory of purchases made by the user regardless of consumption status (where possible)."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"getAvailablePurchases()")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<Purchase[]>")),(0,l.kt)("td",{parentName:"tr",align:null},"Get all purchases made by the user (either non-consumable, or haven't been consumed yet). On Android, it can be called at app launch, but on iOS, only at restoring purchase is recommended (See: ",(0,l.kt)("a",{parentName:"td",href:"https://github.com/dooboolab/react-native-iap/issues/747"},"#747"),")."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"requestPurchase(sku: string, andDangerouslyFinishTransactionAutomatically: boolean, obfuscatedAccountIdAndroid: string, obfuscatedProfileIdAndroid: string)"),(0,l.kt)("ul",null)),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<ProductPurchase>")),(0,l.kt)("td",{parentName:"tr",align:null},"Request a purchase. ",(0,l.kt)("inlineCode",{parentName:"td"},"purchaseUpdatedListener")," will receive the result.",(0,l.kt)("br",null)," ",(0,l.kt)("inlineCode",{parentName:"td"},"andDangerouslyFinishTransactionAutomatically")," defaults to ",(0,l.kt)("inlineCode",{parentName:"td"},"true")," for backwards compatibility but this is deprecated and you should set it to false once you're ",(0,l.kt)("a",{parentName:"td",href:"../usage_instructions/purchase"},"manually finishing your transactions"),"."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"requestPurchaseWithQuantityIOS(sku: string, quantity: number)"),(0,l.kt)("ul",null,(0,l.kt)("li",null,"sku: product ID/sku"),(0,l.kt)("li",null,"quantity: Quantity"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"void")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"iOS only")," Buy a product with a specified quantity. ",(0,l.kt)("inlineCode",{parentName:"td"},"purchaseUpdatedListener")," will receive the result"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"*deprecated")," ",(0,l.kt)("del",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"del"},"buySubscription(sku: string)")),(0,l.kt)("ul",null,(0,l.kt)("li",null,"sku: subscription ID/sku"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"void")),(0,l.kt)("td",{parentName:"tr",align:null},"Create (buy) a subscription to a sku."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"requestSubscription(sku: string, andDangerouslyFinishTransactionAutomaticallyIOS: boolean, oldSkuAndroid: string, purchaseTokenAndroid: string, prorationModeAndroid: string, obfuscatedAccountIdAndroid: string, obfuscatedProfileIdAndroid: string)"),(0,l.kt)("ul",null,(0,l.kt)("li",null,"sku: subscription ID/sku"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"void")),(0,l.kt)("td",{parentName:"tr",align:null},"Create (buy) a subscription to a sku."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"clearTransactionIOS()")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"void")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"iOS only")," Clear up unfinished transanctions which sometimes cause problems. Read more in ",(0,l.kt)("a",{parentName:"td",href:"https://github.com/dooboolab/react-native-iap/issues/257"},"#257"),", ",(0,l.kt)("a",{parentName:"td",href:"https://github.com/dooboolab/react-native-iap/issues/801"},"#801"),"."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"clearProductsIOS()")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"void")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"iOS only")," Clear all products and subscriptions. Read more in below README."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"getReceiptIOS()")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<string>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"iOS only")," Get the current receipt."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"getPendingPurchasesIOS()")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<ProductPurchase[]>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"IOS only")," Gets all the transactions which are pending to be finished."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"validateReceiptIos(body: Record<string, unknown>, devMode: boolean)"),(0,l.kt)("ul",null,(0,l.kt)("li",null,"body: receiptBody"),(0,l.kt)("li",null,"devMode: isTest"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Object\\|boolean")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"iOS only")," Validate receipt."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"presentCodeRedemptionSheetIOS()")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<null>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"iOS only")," Availability: ",(0,l.kt)("inlineCode",{parentName:"td"},"iOS 14.0+")," Displays a sheet that enables users to redeem subscription offer codes that you generated in App Store Connect."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"endConnection()")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<void>")),(0,l.kt)("td",{parentName:"tr",align:null},"End billing connection."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"consumeAllItemsAndroid()")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<void>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Android only")," Consume all items so they are able to buy again. \u26a0\ufe0f Use in dev only (as you should deliver the purchased feature BEFORE consuming it)"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"flushFailedPurchasesCachedAsPendingAndroid()")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<void>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Android only")," Consume all 'ghost' purchases (that is, pending payment that already failed but is still marked as pending in Play Store cache)"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"consumePurchaseAndroid(token: string, payload?: string)"),(0,l.kt)("ul",null,(0,l.kt)("li",null,"token: purchase token"),(0,l.kt)("li",null,"payload: developerPayload"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"void")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Android only")," Finish a purchase. All purchases should be finished once you have delivered the purchased items. E.g. by recording the purchase in your database or on your server."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"acknowledgePurchaseAndroid(token: string, payload?: string)"),(0,l.kt)("ul",null,(0,l.kt)("li",null,"token: purchase token"),(0,l.kt)("li",null,"payload: developerPayload"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<PurchaseResult>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Android only")," Acknowledge a product. Like above for non-consumables. Use ",(0,l.kt)("inlineCode",{parentName:"td"},"finishTransaction")," instead for both platforms since version 4.1.0 or later."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"consumePurchaseAndroid(token: string, payload?: string)"),(0,l.kt)("ul",null,(0,l.kt)("li",null,"token: purchase token"),(0,l.kt)("li",null,"payload: developerPayload"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<PurchaseResult>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Android only")," Consume a product. Like above for consumables. Use ",(0,l.kt)("inlineCode",{parentName:"td"},"finishTransaction")," instead for both platforms since version 4.1.0 or later."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"finishTransactionIOS(transactionId: string)"),(0,l.kt)("ul",null,(0,l.kt)("li",null,"transactionId: the transactionId that you would like to finish."))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<void>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"iOS only")," Finish a transaction. Use ",(0,l.kt)("inlineCode",{parentName:"td"},"finishTransaction")," instead for both platforms since version 4.1.0 or later."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"finishTransaction(purchase: InAppPurchase/ProductPurchase, isConsumable?: boolean, developerPayloadAndroid?: string)"),(0,l.kt)("ul",null,(0,l.kt)("li",null,"purchase: purchase object"),(0,l.kt)("li",null,"isConsumable?: specify whether the product is a consumable"),(0,l.kt)("li",null,"developerPayloadAndroid: developerPayload"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<void>")),(0,l.kt)("td",{parentName:"tr",align:null},"This method works for both platforms and is recommended since version 4.1.0 or later. Equal to ",(0,l.kt)("inlineCode",{parentName:"td"},"finishTransactionIOS")," + ",(0,l.kt)("inlineCode",{parentName:"td"},"consumePurchaseAndroid")," and ",(0,l.kt)("inlineCode",{parentName:"td"},"acknowledgePurchaseAndroid"),"."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"*deprecated")," ",(0,l.kt)("del",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"del"},"buySubscription(sku: string, prevSku?: string, mode?: number)")),(0,l.kt)("ul",null,(0,l.kt)("li",null,"sku: subscription ID/sku"),(0,l.kt)("li",null,"prevSku: old subscription ID/sku (optional)"),(0,l.kt)("li",null,"mode: proration mode (optional)"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Promise<Purchase>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Android only")," Create (buy) a subscription to a sku. For upgrading/downgrading subscription on Android pass the second parameter with current subscription ID, on iOS this is handled automatically by store. You can also optionally pass in a proration mode integer for upgrading/downgrading subscriptions on Android"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"validateReceiptAndroid(bundleId: string, productId: string, productToken: string, accessToken: string)")," ",(0,l.kt)("ul",null,(0,l.kt)("li",null,"bundleId: the packageName"),(0,l.kt)("li",null,"productId: productId"),(0,l.kt)("li",null,"productToken: productToken"),(0,l.kt)("li",null,"accessToken: accessToken"),(0,l.kt)("li",null,"isSubscription: isSubscription"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Object\\|boolean")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Android only")," Validate receipt."),(0,l.kt)("td",{parentName:"tr",align:null})))))}p.isMDXComponent=!0}}]);